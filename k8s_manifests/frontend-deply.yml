apiVersion: apps/v1
kind: Deployment
metadata:
  name: boutique-frontend
  labels:
    app: frontend
spec:
  selector:
    matchLabels:
      app: boutique
  template:
    metadata:
      labels:
        app: boutique
    spec:
      containers:
      - name: boutique-cont
        image: 339713063356.dkr.ecr.us-west-1.amazonaws.com/boutique-frontend:v1.0.2
        ports:
        - containerPort: 8080
        readinessProbe:
          initialDelaySeconds: 10
          httpGet:
            path: "/_healthz"
            port: 8080
            httpHeaders:
            - name: "Cookie"
              value: "shop_session-id=x-readiness-probe"
        livenessProbe:
          initialDelaySeconds: 10
          httpGet:
            path: "/_healthz"
            port: 8080
            httpHeaders:
            - name: "Cookie"
              value: "shop_session-id=x-liveness-probe"
        env:
        - name: PORT
          value: "8080"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: "productcatalogservice:3550"
        - name: CURRENCY_SERVICE_ADDR
          value: "currencyservice:7000"
        - name: CART_SERVICE_ADDR
          value: "cartservice:7070"
        - name: RECOMMENDATION_SERVICE_ADDR
          value: "recommendationservice:8080"
        - name: SHIPPING_SERVICE_ADDR
          value: "shippingservice:50051"
        - name: CHECKOUT_SERVICE_ADDR
          value: "checkoutservice:5050"
        - name: AD_SERVICE_ADDR
          value: "adservice:9555"
        # # When not set, defaults to "local" unless running in GKE, otherwies auto-sets to gcp
        # - name: ENV_PLATFORM
        #   value: "aws"
        - name: ENABLE_PROFILER
          # # ENV_PLATFORM: One of: local, gcp, aws, azure, onprem, alibaba
          value: "0"
        # - name: CYMBAL_BRANDING
        #   value: "true"
        # - name: FRONTEND_MESSAGE
        #   value: "Replace this with a message you want to display on all pages."
        # As part of an optional Google Cloud demo, you can run an optional microservice called the "packaging service".
        # - name: PACKAGING_SERVICE_URL
        #   value: "" # This value would look like "http://123.123.123"
        resources:
          requests:
            cpu: 100m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
---
apiVersion: v1
kind: Service
metadata:
  name: boutique-frontend-svc
  labels:
    app: frontend
spec:
  type: ClusterIP
  selector:
    app: boutique
  ports:
  - name: http
    port: 80
    targetPort: 8080
